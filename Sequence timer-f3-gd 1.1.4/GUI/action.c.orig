#include "action.h"
#include "touch.h"
#include "delay.h"
#include "flag.h"
#include "lcd.h"
#include "gui.h"
#include "main_page.h"
#include "main_setting_page.h"
#include "delay_setting_page.h"
#include "switch_setting_page_activity.h"
#include "date_setting_page.h"
#include "reset_page.h"
#include "ip_setting_page.h"
#include "uv_ov_page.h"
#include "timer_page.h"
#include "pwd_page.h"
#include "auz_page.h"
#include "data.h"
#include "uv_ov_page.h"

extern _uv_ov_data uv_ov_data;
extern _ip_data ip_data;
extern _m_tp_dev tp_dev;//触屏结构体
extern _flag_dev flag_dev;
void screen_touch(){
 
   tp_dev.scan(0);  
	 if(tp_dev.sta&TP_PRES_DOWN){
		    delay_ms(10);//消抖
	      if(tp_dev.sta&TP_PRES_DOWN){ 
	       
		        main_page_action();//main_activity上的屏幕动作主要更新标志位，来更新页面
					  uv_ov_page_action();//选取uv_ov_page上的锚点，用于加减箭头确定跟新数据对象
										
					  add_sb();//判断加减法箭头是否按下
				}
	 
	 }
	
	 page_flash();//MUNE栏动作和上下两个栏动作(可以函数里面增加刷新时间延时来防止长按刷新过快)
	 data_flash();
}


//切换时界面刷新
void page_flash(){

	
//	   gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
//	   gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
//	   gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
//	   gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
//	
//	   LCD_Show_picture(25,47,WHITE,0); 		
//		 LCD_Show_3030_String(10,89,"Delay",WHITE);
//		 LCD_Show_3030_String(1, 126,"Switch",WHITE);
//		 LCD_Show_3030_String(15,168,"Date",WHITE);
	
	
	  if(flag_dev.activity_flag==HOME){
			
			 
	      flag_dev.activity_flag=NUll;
	      LCD_Fill(93,42,319,208,BLACK); 
				LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, RED,RED);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
			  gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
			  LCD_Show_picture(25,47,WHITE,0); 		  
			  LCD_Show_3030_String(10,89,"Delay",WHITE);
			  LCD_Show_3030_String(1, 126,"Switch",WHITE);
			  LCD_Show_3030_String(15,168,"Date",WHITE);
        			  
			  main_setting_page_activity();
			 LCD_Fill(22,212,52,239,RED);
			 LCD_Show_3030_String(22,212,"1/3",WHITE);  	 
			 flag_dev.page_num=1;
			 flag_dev.anchor=0;//清除切换界面前锚点
//			 flag_dev.screen_flag=HOME_X;	 

	  }else if(flag_dev.activity_flag==DELAY){
			
		    flag_dev.activity_flag=NUll;
				LCD_Fill(93,0,319,40,RED);  
		    LCD_Fill(93,42,319,208,BLACK);
			  gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, RED,RED);
			  gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
			  gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
			  LCD_Show_picture(25,47,WHITE,0); 		  
			  LCD_Show_3030_String(10,89,"Delay",WHITE);
			  LCD_Show_3030_String(1, 126,"Switch",WHITE);
			  LCD_Show_3030_String(15,168,"Date",WHITE);
        
		    delay_setting_page_activity();
			  flag_dev.screen_flag=DELAY;
			 flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==SWITCH){
			
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,125,86,40,1,1,RED,RED);
			  gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
			  LCD_Show_picture(25,47,WHITE,0); 		  
			  LCD_Show_3030_String(10,89,"Delay",WHITE);
			  LCD_Show_3030_String(1, 126,"Switch",WHITE);
			  LCD_Show_3030_String(15,168,"Date",WHITE);
		    switch_setting_page_activity();
				flag_dev.screen_flag=SWITCH;
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==DATE){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			 gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
			  gui_draw_arcrectangle(2,166,86,40,1,1,RED,RED);
			  LCD_Show_picture(25,47,WHITE,0); 		  
			  LCD_Show_3030_String(10,89,"Delay",WHITE);
			  LCD_Show_3030_String(1, 126,"Switch",WHITE);
			  LCD_Show_3030_String(15,168,"Date",WHITE);
		    date_setting_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==TIMER){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, RED,RED);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
			  gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
			  LCD_Show_3030_String(10,50,"Timer",WHITE);	
			  LCD_Show_3030_String(10, 89,"Reset",WHITE);
			  LCD_Show_3030_String(30,131,"IP",WHITE);
			  LCD_Show_3030_String(10,170,"UV&OV",WHITE);
		    timer_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==RESET){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, RED,RED);
			  gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
			  gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
			  LCD_Show_3030_String(10,50,"Timer",WHITE);	
			  LCD_Show_3030_String(10, 89,"Reset",WHITE);
			  LCD_Show_3030_String(30,131,"IP",WHITE);
			  LCD_Show_3030_String(10,170,"UV&OV",WHITE);
		    reset_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==IP){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,125,86,40,1,1,RED,RED);
			  gui_draw_arcrectangle(2,166,86,40,1,1,BLUE,BLUE);
			  LCD_Show_3030_String(10,50,"Timer",WHITE);	
			  LCD_Show_3030_String(10, 89,"Reset",WHITE);
			  LCD_Show_3030_String(30,131,"IP",WHITE);
			  LCD_Show_3030_String(10,170,"UV&OV",WHITE);
		    ip_setting_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==UV_OV){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			  gui_draw_arcrectangle(2,125,86,40,1,1,BLUE,BLUE);
			  gui_draw_arcrectangle(2,166,86,40,1,1,RED,RED);
			  LCD_Show_3030_String(10,50,"Timer",WHITE);	
			  LCD_Show_3030_String(10, 89,"Reset",WHITE);
			  LCD_Show_3030_String(30,131,"IP",WHITE);
			  LCD_Show_3030_String(10,170,"UV&OV",WHITE);
		    uv_ov_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==PWD){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, RED,RED);
			 gui_draw_arcrectangle(2,84, 86,40,1,1, BLUE,BLUE);
			 gui_draw_arcrectangle(2,125,86,40,1,1,BLACK,BLACK);
			 gui_draw_arcrectangle(2,166,86,40,1,1,BLACK,BLACK);
			 
			
			 LCD_Show_3030_String(25,50,"PWD",WHITE);
			 LCD_Show_3030_String(25,89,"AUZ",WHITE);
		    pwd_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}else if(flag_dev.activity_flag==AUZ){
		    flag_dev.activity_flag=NUll;
		    LCD_Fill(93,42,319,208,BLACK);
			  LCD_Fill(93,0,319,40,RED);  
			  gui_draw_arcrectangle(2,43, 86,40,1,1, BLUE,BLUE);
			 gui_draw_arcrectangle(2,84, 86,40,1,1, RED,RED);
			 gui_draw_arcrectangle(2,125,86,40,1,1,BLACK,BLACK);
			 gui_draw_arcrectangle(2,166,86,40,1,1,BLACK,BLACK);
			
			 LCD_Show_3030_String(25,50,"PWD",WHITE);
			 LCD_Show_3030_String(25,89,"AUZ",WHITE);
		    auz_page_activity();
			flag_dev.anchor=0;//清除切换界面前锚点
		}
	


}


//home按键左右的两个箭头用于加减法

void add_sb(){
	
if((tp_dev.x[0]>225)&&(tp_dev.x[0]<255)&&(tp_dev.y[0]>215)&&(tp_dev.y[0]<240)){

	
	
	flag_dev.screen_key=LEFT;
	
}else if((tp_dev.x[0]>285)&&(tp_dev.x[0]<319)&&(tp_dev.y[0]>215)&&(tp_dev.y[0]<240)){
	
	flag_dev.screen_key=RIGHT;


}

}


//使用屏幕按钮或者编码器时候的数据刷新
void data_flash(){

//-----------------------------IP-----------------------------	
if(flag_dev.action_flag==IP&&flag_dev.screen_key==RIGHT){
	
  ip_data.ip=ip_data.ip+1;
  LCD_ShowNum(185,125,ip_data.ip,3,30,BLACK,WHITE);
   flag_dev.screen_key=0;
	if(ip_data.ip>127){
	   ip_data.ip=0;
	}
	
	
}else if(flag_dev.action_flag==IP&&flag_dev.screen_key==LEFT){

	ip_data.ip=ip_data.ip-1;

  LCD_ShowNum(185,125,ip_data.ip,3,30,BLACK,WHITE);
 	if(ip_data.ip==0){
	ip_data.ip=127;
	}
	
   flag_dev.screen_key=0;
	
}
//-----------------------protection----------------------------------

	
//		 LCD_Show_3030_String(220,70,"000V",BLACK);
//     LCD_Show_3030_String(160,110,"000V",BLACK);
//		 LCD_Show_3030_String(160,150,"000V",BLACK);
//		 
//		 LCD_Show_3030_String(255,110,"ON",BLACK);
//		 LCD_Show_3030_String(250,150,"OFF",BLACK);
//		 

if(flag_dev.action_flag==UV_OV&&flag_dev.anchor==1&&flag_dev.screen_key==RIGHT){
	
  uv_ov_data.rdv=uv_ov_data.rdv+1;
	LCD_ShowNum(235,68,uv_ov_data.rdv,2,30,WHITE,RED);
	flag_dev.screen_key=0;
	
}else if(flag_dev.action_flag==UV_OV&&flag_dev.anchor==1&&flag_dev.screen_key==LEFT){
  uv_ov_data.rdv=uv_ov_data.rdv-1;
  LCD_ShowNum(235,68,uv_ov_data.rdv,2,30,WHITE,RED);
  flag_dev.screen_key=0;
}else if(flag_dev.action_flag==UV_OV&&flag_dev.anchor==2&&flag_dev.screen_key==RIGHT){
   uv_ov_data.uv=uv_ov_data.uv+1;
   LCD_ShowNum(160,108,uv_ov_data.uv,3,30,WHITE,RED);
	flag_dev.screen_key=0;
	
	
}else if(flag_dev.action_flag==UV_OV&&flag_dev.anchor==2&&flag_dev.screen_key==LEFT){
   uv_ov_data.uv=uv_ov_data.uv-1;
   LCD_ShowNum(160,108,uv_ov_data.uv,3,30,WHITE,RED);
flag_dev.screen_key=0;
}else if(flag_dev.action_flag==UV_OV&&flag_dev.anchor==3&&flag_dev.screen_key==RIGHT){
  uv_ov_data.ov=uv_ov_data.ov+1;
  LCD_ShowNum(160,148,uv_ov_data.ov,3,30,WHITE,RED);
	flag_dev.screen_key=0;
	
	
}else if(flag_dev.action_flag==UV_OV&&flag_dev.anchor==3&&flag_dev.screen_key==LEFT){
  uv_ov_data.ov=uv_ov_data.ov-1;
  LCD_ShowNum(160,148,uv_ov_data.ov,3,30,WHITE,RED);
flag_dev.screen_key=0;
}




delay_ms(100);
}  
	    		         
	   
